module Tritium::Engines::Reference::Scope
  module NodeModules
    module PositioningMethods
      def bottom(&block); var("position", "bottom");  position(&block) if block; end
      def top(&block);    var("position",    "top");  position(&block) if block; end
      def after(&block);  var("position",  "after");  position(&block) if block; end
      def before(&block); var("position", "before");  position(&block) if block; end

      def position(&block); self.instance_eval(&block) if block; end
    
     private
     
      def position_node(target, node, position = nil)
        position ||= var("position") || "bottom"
        throw("this can only be called with a bottom, after, or before block") if position.nil?

        if node.is_a?(String)
          node = target.document.fragment(node)
        end

        case position
        when "top"
          if target.children.size > 0
            target.children.first.add_previous_sibling(node)
          else
            target.add_child(node)
          end
        when "after"
          target.add_next_sibling(node)
        when "before"
          target.add_previous_sibling(node)
        else
          target.add_child(node)
        end
      end
    end
  end
end