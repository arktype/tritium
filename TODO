* Parser
  * Implement Types
    * Listed in the spec.
    * Any first letter capitalized, unquoted, A-z term
  * Regexp
    * Allow us to define regexp with the ` character
    * Aka: `http\\/\//\\\\///`
* Engines
  * match() should return either "worked" or "failed"
  * with() and not() should do the same as match()
  * replace() is should be replace_regexp() and replace_string()
    * macros sort it for you