GRAMMAR:

script		::	statement*

statement	::	'@import' path
<<<<<<< HEAD:tritium-grammar
		|	<var> '=' term
		|	<id> arglist block?
=======
		      |	  <var> '=' term
		      |	  <id> arglist block
>>>>>>> 354409c724675d4e6f2a0da6642a442cf5a60332:tritium.bnf

path		  ::	<word>
		      |	  <string>

arglist		::	'(' args? ')'

args		  ::	arg ( ',' arg )*

arg		    ::	term
		      |	  <kwd> term

term		  ::	<string>
		      |	  <regexp>
		      |	  <var>
		      |	  <id> arglist

block		  ::	( '{' script '}' )?


LEXICAL RULES:

<word>		::	[-+.*?:\/\w]+		(reasonable filenames & paths)

<string>	::	"(\\.|[^"\\])*"		(double quoted strings)
		      |	  '(\\.|[^'\\])*'		(single quoted strings)

<regexp>	::	\/(\\.|[^\/\\])*\/[imxouesn]*	(Ruby regexps)

<var>		::	\$\w+			('$' << the usual)

<id>		::	\$|[_a-zA-Z](\w|\$)*	(the usual, including '$')

<kwd>		  ::	[a-zA-Z_:][-\w:.]*:	(XML attributes << ':')

<comment>	::	#.*			(single line)
		      |	  '#[' thru matching ']#'	(multiline, matched/nested)
