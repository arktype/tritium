#!/usr/bin/env ruby
require "optparse"
options = {}
OptionParser.new do |opts|
  opts.banner = "Usage: filename.ts filename.to"

  opts.on("-s", "--stdout", "Print to STDOUT") do |s|
    options[:standard_out] = s
  end
  opts.on("-d DIRECTORY", "--output-dir=DIRECTORY", "Output directory") do |o|
    options[:output_directory] = o
  end
end.parse!

require_relative 'exec_init' # Sets up bundler, etc
require_relative '../lib/tritium'
require_relative '../lib/tritium/serializer/serializer'

filename = ARGV[0] || ""

def process_file(filename, output_file)
  result = Tritium::Serializer.script(filename)
  File.open(output_file, "wb") { |f| f.write(result) }
end

if !File.exists?(filename)
  puts "No file found!"
  exit(1)
else # run command!
  if File.directory?(filename)
    input_dir = File.absolute_path(filename)
    puts "IS DIRECTORY"
    
    # If we don't specify an output dir, then get a decent one!
    if options[:output_directory].nil? 
      options[:output_directory] = input_dir
    end

    files = Dir[input_dir + "/*.ts"]
    files += Dir[input_dir + "/**/*.ts"]
    files.each do |file|
      output_name = (file[(input_dir.length + 1)..-4] + ".to").gsub("/", "__")
      output_file = File.join(options[:output_directory], output_name)
      puts file.inspect
      process_file(file, output_file)
    end
  else
    print Tritium::Serializer.script(filename)
  end
end