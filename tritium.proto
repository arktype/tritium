package tritium;

message Type {
	optional string name = 1;
}

message Instruction {
	required InstructionType type = 1;
	optional string value = 2;
	optional int32 import_index = 3; // only used if we are an import

	repeated Instruction children = 4;
	repeated Instruction arguments = 5;

	// Linked: Function Reference
	optional int32 function_id = 6;

	// Pre-Linked: Prototype Function Reference (may not exist!)
	optional Function function_signature = 7;

	enum InstructionType {
		BLOCK = 0;
		FUNCTION_CALL = 1;
		IMPORT = 2;
		LITERAL = 3;
	}
}

message Function {
	optional string name = 1;

	// Linked
	optional int32 type_id = 2;
	required int32 return_type_id = 3;
	optional int32 opens_type_id = 4;

	// Only informative post-linking
	optional bool built_in = 5;

	repeated Argument args = 6;

	// Only for non-built-in functions
	optional Instruction instruction = 7;

	message Argument {
		optional int32 type_id = 2;
	}
}

// Object representing a script
// Possibly linked or not
message Object {
	optional string name = 1 [default='main'];
	optional Instruction root = 2;
	optional int32 scope_type_id = 3;
}

// A post-linking object for execution
message Executable {
	repeated Object objects = 1;
	repeated Function functions = 2;
	repeated Type types = 3;
}

message Package {
	repeated Script scripts = 1;
	repeated Functions functions = 2;
	repeated Type types = 3;
	repeated Transformer transformers = 1;
}